import { Server } from "Socket.IO";

interface ServerToClientEvents {
  noArg: () => void;
  basicEmit: (a: number, b: string, c: Buffer) => void;
  withAck: (d: string, callback: (e: number) => void) => void;
}

interface ClientToServerEvents {
  message: (string) => void;
}

interface InterServerEvents {
  ping: () => void;
}

interface SocketData {
  message: string;
}

const handler = (req, res) => {
  if (res.socket.server.io) {
    console.log("Socket is already running");
  } else {
    console.log("Socket is initializing");

    const io = new Server<
      ClientToServerEvents,
      ServerToClientEvents,
      InterServerEvents,
      SocketData
    >(res.socket.server, {
      allowEIO3: true, // false by default
    });

    res.socket.server.io = io;
    io.on("connection", (socket: any) => {
      console.log("WS Connection established");
      socket.on("message", (msg: any) => {
        console.log(msg);
      });
    });
  }
  res.end();
};

export default handler;
